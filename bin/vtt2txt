#!/usr/bin/env python
# coding: utf-8

"""
Convert a .vtt VTT transcript file to plain text.
Usage:
   vtt2txt('transcript.vtt', 'transcript.txt')
   If no second argument is given, use the same name as the input file but with a .txt extension.
   vtt2txt('transcript.vtt')
This will read the content of the 'transcript.vtt' file, remove the timestamps and metadata lines,
and write the cleaned text to a new file called 'transcript.txt'.

(C) 2024 Robb Romans
"""

import re
import sys
import os

def vtt2txt(vtt_file, output_file=None):
    """
    Converts a WebVTT file to a plain text file by removing timestamps and metadata.
    Args:
        vtt_file (str): The path to the input WebVTT file.
        output_file (str, optional): The path to the output plain text file. If not provided,
                                     the output file will have the same name as the input file
                                     but with a .txt extension.
    Returns:
        None
    """
    if output_file is None:
        output_file = os.path.splitext(vtt_file)[0] + '.txt'

    with open(vtt_file, 'r') as file:
        lines = file.readlines()

    # Enhanced regex to match lines that consist solely of timestamps in the format HH:MM:SS, HH:MM:SS.mmm, HH:MM, MM:SS, or M:SS
    timestamp_pattern = re.compile(r'^\d{1,2}:\d{2}(:\d{2}(\.\d{3})?)?$')

    # Filter out lines with timestamps, metadata, empty lines, lines with only whitespace, numbers,
    # or special characters
    text_lines = [
        line for line in lines
        if not timestamp_pattern.match(line.strip())  # Remove lines with only timestamps
        and line.strip() != "WEBVTT"  # Remove metadata
        and line.strip()  # Remove empty lines
        and not line.strip().isdigit()  # Remove lines with only numbers
        and not re.match(r'^[^\w\s]+$', line.strip())  # Remove lines with only special characters
    ]

    # Write the cleaned text to the output file
    with open(output_file, 'w') as file:
        file.writelines(text_lines)

def main():
    """
    Main function to handle command-line arguments and call the vtt2txt function.
    Expects 1 or 2 arguments:
        1. The input VTT file path.
        2. (Optional) The output TXT file path.
    If the number of arguments is incorrect, it prints the usage and exits.
    """
    if len(sys.argv) not in [2, 3]:
        print("Usage: python vtt2txt.py <input_vtt_file> [<output_txt_file>]")
        sys.exit(1)

    # Extract input and output file paths from command-line arguments
    input_vtt_file = sys.argv[1]
    output_txt_file = sys.argv[2] if len(sys.argv) == 3 else None

    # Call the vtt2txt function with the provided arguments
    vtt2txt(input_vtt_file, output_txt_file)

if __name__ == "__main__":
    main()
